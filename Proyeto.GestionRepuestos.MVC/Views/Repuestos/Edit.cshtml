@model Proyeto.GestionRepuestos.MVC.Models.Repuesto
@{
    ViewBag.Title = "Editar Repuesto";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0">@ViewBag.Title</h2>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Id)
                        @Html.HiddenFor(m => m.FechaIngreso)

                        <div class="mb-3">
                            @Html.LabelFor(m => m.Nombre, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Descripcion, new { @class = "form-label" })
                            @Html.TextAreaFor(m => m.Descripcion, new { @class = "form-control", rows = "3" })
                            @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "text-danger" })
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(m => m.CantidadDisponible, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.CantidadDisponible, new { @class = "form-control", type = "number", min = "1" })
                                @Html.ValidationMessageFor(m => m.CantidadDisponible, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(m => m.Precio, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.Precio, new { @class = "form-control", type = "number", step = "0.01", min = "0.01" })
                                @Html.ValidationMessageFor(m => m.Precio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="submit" class="btn btn-primary me-md-2">Guardar Cambios</button>
                            @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-secondary" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}